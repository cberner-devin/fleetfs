namespace generated;

union RequestType { ReadRequest, GetattrRequest, MkdirRequest, ReaddirRequest }

table GenericRequest {
  request: RequestType;
}

table ReadRequest {
  offset: ulong;
  read_size: uint;
  filename: string (required);
}

table GetattrRequest {
  filename: string (required);
}

table MkdirRequest {
  filename: string (required);
  mode: ushort;
}

table ReaddirRequest {
  path: string (required);
}

root_type GenericRequest;

enum ErrorCode: byte {
  DefaultValueNotAnError = 0,
  DoesNotExist
}

table ErrorResponse {
  error_code: ErrorCode;
}

table ReadResponse {
  data: [ubyte] (required);
}

struct Timestamp {
  seconds: long;
  nanos: int;
}

enum FileType: ubyte {
  DefaultValueNotAType,
  File,
  Directory
}

table DirectoryEntry {
  filename: string (required);
  kind: FileType;
}

table DirectoryListingResponse {
  entries: [DirectoryEntry] (required);
}

table FileMetadataResponse {
  size_bytes: ulong;
  size_blocks: ulong;
  last_access_time: Timestamp (required);
  last_modified_time: Timestamp (required);
  last_metadata_modified_time: Timestamp (required);
  kind: FileType;
  mode: ushort;
  hard_links: uint;
  user_id: uint;
  group_id: uint;
  device_id: uint;
}

union ResponseType { ErrorResponse, ReadResponse, FileMetadataResponse, DirectoryListingResponse }

table GenericResponse {
  response: ResponseType;
}
